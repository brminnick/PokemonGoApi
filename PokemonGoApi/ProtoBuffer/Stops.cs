// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stops.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace PokemonGoApi.Proto {

  /// <summary>Holder for reflection information generated from stops.proto</summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class StopsReflection {

    #region Descriptor
    /// <summary>File descriptor for stops.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static StopsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgtzdG9wcy5wcm90bxISUG9rZW1vbkdvQXBpLlByb3RvIt4BChNGb3J0RGV0",
            "YWlsc091dFByb3RvEgoKAklkGAEgASgJEgwKBFRlYW0YAiABKAUSDAoETmFt",
            "ZRgEIAEoCRIQCghJbWFnZVVybBgFIAEoCRIKCgJGcBgGIAEoBRIPCgdTdGFt",
            "aW5hGAcgASgFEhIKCk1heFN0YW1pbmEYCCABKAUSEAoIRm9ydFR5cGUYCSAB",
            "KAUSEAoITGF0aXR1ZGUYCiABKAMSEQoJTG9uZ2l0dWRlGAsgASgDEhMKC0Rl",
            "c2NyaXB0aW9uGAwgASgJEhAKCE1vZGlmaWVyGA0gASgBIkMKEEZvcnREZXRh",
            "aWxzUHJvdG8SCgoCSWQYASABKAkSEAoITGF0aXR1ZGUYAiABKAMSEQoJTG9u",
            "Z2l0dWRlGAMgASgDYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGoApi.Proto.FortDetailsOutProto), global::PokemonGoApi.Proto.FortDetailsOutProto.Parser, new[]{ "Id", "Team", "Name", "ImageUrl", "Fp", "Stamina", "MaxStamina", "FortType", "Latitude", "Longitude", "Description", "Modifier" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::PokemonGoApi.Proto.FortDetailsProto), global::PokemonGoApi.Proto.FortDetailsProto.Parser, new[]{ "Id", "Latitude", "Longitude" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///  FORT SEARCH
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FortDetailsOutProto : pb::IMessage<FortDetailsOutProto> {
    private static readonly pb::MessageParser<FortDetailsOutProto> _parser = new pb::MessageParser<FortDetailsOutProto>(() => new FortDetailsOutProto());
    public static pb::MessageParser<FortDetailsOutProto> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGoApi.Proto.StopsReflection.Descriptor.MessageTypes[0]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public FortDetailsOutProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    public FortDetailsOutProto(FortDetailsOutProto other) : this() {
      id_ = other.id_;
      team_ = other.team_;
      name_ = other.name_;
      imageUrl_ = other.imageUrl_;
      fp_ = other.fp_;
      stamina_ = other.stamina_;
      maxStamina_ = other.maxStamina_;
      fortType_ = other.fortType_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      description_ = other.description_;
      modifier_ = other.modifier_;
    }

    public FortDetailsOutProto Clone() {
      return new FortDetailsOutProto(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Team" field.</summary>
    public const int TeamFieldNumber = 2;
    private int team_;
    public int Team {
      get { return team_; }
      set {
        team_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ImageUrl" field.</summary>
    public const int ImageUrlFieldNumber = 5;
    private string imageUrl_ = "";
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fp" field.</summary>
    public const int FpFieldNumber = 6;
    private int fp_;
    public int Fp {
      get { return fp_; }
      set {
        fp_ = value;
      }
    }

    /// <summary>Field number for the "Stamina" field.</summary>
    public const int StaminaFieldNumber = 7;
    private int stamina_;
    public int Stamina {
      get { return stamina_; }
      set {
        stamina_ = value;
      }
    }

    /// <summary>Field number for the "MaxStamina" field.</summary>
    public const int MaxStaminaFieldNumber = 8;
    private int maxStamina_;
    public int MaxStamina {
      get { return maxStamina_; }
      set {
        maxStamina_ = value;
      }
    }

    /// <summary>Field number for the "FortType" field.</summary>
    public const int FortTypeFieldNumber = 9;
    private int fortType_;
    public int FortType {
      get { return fortType_; }
      set {
        fortType_ = value;
      }
    }

    /// <summary>Field number for the "Latitude" field.</summary>
    public const int LatitudeFieldNumber = 10;
    private long latitude_;
    public long Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "Longitude" field.</summary>
    public const int LongitudeFieldNumber = 11;
    private long longitude_;
    public long Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "Description" field.</summary>
    public const int DescriptionFieldNumber = 12;
    private string description_ = "";
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Modifier" field.</summary>
    public const int ModifierFieldNumber = 13;
    private double modifier_;
    public double Modifier {
      get { return modifier_; }
      set {
        modifier_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as FortDetailsOutProto);
    }

    public bool Equals(FortDetailsOutProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Team != other.Team) return false;
      if (Name != other.Name) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (Fp != other.Fp) return false;
      if (Stamina != other.Stamina) return false;
      if (MaxStamina != other.MaxStamina) return false;
      if (FortType != other.FortType) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      if (Description != other.Description) return false;
      if (Modifier != other.Modifier) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Team != 0) hash ^= Team.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      if (Fp != 0) hash ^= Fp.GetHashCode();
      if (Stamina != 0) hash ^= Stamina.GetHashCode();
      if (MaxStamina != 0) hash ^= MaxStamina.GetHashCode();
      if (FortType != 0) hash ^= FortType.GetHashCode();
      if (Latitude != 0L) hash ^= Latitude.GetHashCode();
      if (Longitude != 0L) hash ^= Longitude.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Modifier != 0D) hash ^= Modifier.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Team != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Team);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ImageUrl);
      }
      if (Fp != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Fp);
      }
      if (Stamina != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Stamina);
      }
      if (MaxStamina != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(MaxStamina);
      }
      if (FortType != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FortType);
      }
      if (Latitude != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(Latitude);
      }
      if (Longitude != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Longitude);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Description);
      }
      if (Modifier != 0D) {
        output.WriteRawTag(105);
        output.WriteDouble(Modifier);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Team != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Team);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (Fp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Fp);
      }
      if (Stamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Stamina);
      }
      if (MaxStamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStamina);
      }
      if (FortType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FortType);
      }
      if (Latitude != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Latitude);
      }
      if (Longitude != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Longitude);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Modifier != 0D) {
        size += 1 + 8;
      }
      return size;
    }

    public void MergeFrom(FortDetailsOutProto other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Team != 0) {
        Team = other.Team;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
      if (other.Fp != 0) {
        Fp = other.Fp;
      }
      if (other.Stamina != 0) {
        Stamina = other.Stamina;
      }
      if (other.MaxStamina != 0) {
        MaxStamina = other.MaxStamina;
      }
      if (other.FortType != 0) {
        FortType = other.FortType;
      }
      if (other.Latitude != 0L) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0L) {
        Longitude = other.Longitude;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Modifier != 0D) {
        Modifier = other.Modifier;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Team = input.ReadInt32();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            ImageUrl = input.ReadString();
            break;
          }
          case 48: {
            Fp = input.ReadInt32();
            break;
          }
          case 56: {
            Stamina = input.ReadInt32();
            break;
          }
          case 64: {
            MaxStamina = input.ReadInt32();
            break;
          }
          case 72: {
            FortType = input.ReadInt32();
            break;
          }
          case 80: {
            Latitude = input.ReadInt64();
            break;
          }
          case 88: {
            Longitude = input.ReadInt64();
            break;
          }
          case 98: {
            Description = input.ReadString();
            break;
          }
          case 105: {
            Modifier = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class FortDetailsProto : pb::IMessage<FortDetailsProto> {
    private static readonly pb::MessageParser<FortDetailsProto> _parser = new pb::MessageParser<FortDetailsProto>(() => new FortDetailsProto());
    public static pb::MessageParser<FortDetailsProto> Parser { get { return _parser; } }

    public static pbr::MessageDescriptor Descriptor {
      get { return global::PokemonGoApi.Proto.StopsReflection.Descriptor.MessageTypes[1]; }
    }

    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    public FortDetailsProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    public FortDetailsProto(FortDetailsProto other) : this() {
      id_ = other.id_;
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
    }

    public FortDetailsProto Clone() {
      return new FortDetailsProto(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Latitude" field.</summary>
    public const int LatitudeFieldNumber = 2;
    private long latitude_;
    public long Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "Longitude" field.</summary>
    public const int LongitudeFieldNumber = 3;
    private long longitude_;
    public long Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    public override bool Equals(object other) {
      return Equals(other as FortDetailsProto);
    }

    public bool Equals(FortDetailsProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Latitude != other.Latitude) return false;
      if (Longitude != other.Longitude) return false;
      return true;
    }

    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Latitude != 0L) hash ^= Latitude.GetHashCode();
      if (Longitude != 0L) hash ^= Longitude.GetHashCode();
      return hash;
    }

    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Latitude != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Latitude);
      }
      if (Longitude != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Longitude);
      }
    }

    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Latitude != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Latitude);
      }
      if (Longitude != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Longitude);
      }
      return size;
    }

    public void MergeFrom(FortDetailsProto other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Latitude != 0L) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0L) {
        Longitude = other.Longitude;
      }
    }

    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Latitude = input.ReadInt64();
            break;
          }
          case 24: {
            Longitude = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
