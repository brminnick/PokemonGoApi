syntax = "proto3";
package PokemonGoApi.Proto;

import public "inventory.proto";

// GET MAP OBJECTS
enum GetMapObjectsOutProtoStatus {
    UNSET_STATUS = 0; // was originally "UNSET" in the app itself
    SUCCESS = 1;
    LOCATION_UNSET = 2;
}

// The get map objects request object
message GetMapObjectsProto {
    repeated uint64 CellId = 1;
    repeated int64 SinceTimeMs = 2;
    double PlayerLat = 3;
    double PlayerLng = 4;
}

// The get map objects response object
message GetMapObjectsOutProto {
    repeated ClientMapCellProto MapCell = 1;
    GetMapObjectsOutProtoStatus Status = 2;
}

// A cell is a geographical "zone" containing objects like pokemon, gyms, and pokestops
message ClientMapCellProto {

    // S2 geographic area that the cell covers (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
    uint64 S2CellId = 1;

    // current timestamp
    int64 AsOfTimeMs = 2;

    repeated PokemonFortProto Fort = 3;
    repeated ClientSpawnPointProto SpawnPoint = 4;
    repeated string DeletedObject = 6;
    bool IsTruncatedList = 7;
    repeated PokemonSummaryFortProto FortSummary = 8;
    repeated ClientSpawnPointProto DecimatedSpawnPoint = 9;

    // Pokemon farther away than 2 "steps", but still in the area (3 "steps" away)
    repeated NearbyPokemonProto NearbyPokemon = 11;

    // Each pokemon within 2 "steps" or closer will have a WildPokemonProto and MapPokemonProto object
    repeated WildPokemonProto WildPokemon = 5;
    repeated MapPokemonProto CatchablePokemon = 10;
}
message MapPokemonProto {
    // S2 geographic area of the spawn point (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
    string SpawnPointId = 1;

    fixed64 EncounterId = 2;
    Custom_PokemonName PokedexTypeId = 3;

    // After this timestamp, the pokemon will be gone
    int64 ExpirationTimeMs = 4;

    double Latitude = 5;
    double Longitude = 6;
}
enum Custom_PokemonName {
    MISSINGNO = 0; // just kidding
    BULBASAUR = 1;
    IVYSAUR = 2;
    VENUSAUR = 3;
    CHARMENDER = 4;
    CHARMELEON = 5;
    CHARIZARD = 6;
    SQUIRTLE = 7;
    WARTORTLE = 8;
    BLASTOISE = 9;
    CATERPIE = 10;
    METAPOD = 11;
    BUTTERFREE = 12;
    WEEDLE = 13;
    KAKUNA = 14;
    BEEDRILL = 15;
    PIDGEY = 16;
    PIDGEOTTO = 17;
    PIDGEOT = 18;
    RATTATA = 19;
    RATICATE = 20;
    SPEAROW = 21;
    FEAROW = 22;
    EKANS = 23;
    ARBOK = 24;
    PIKACHU = 25;
    RAICHU = 26;
    SANDSHREW = 27;
    SANDLASH = 28;
    NIDORAN_FEMALE = 29;
    NIDORINA = 30;
    NIDOQUEEN = 31;
    NIDORAN_MALE = 32;
    NIDORINO = 33;
    NIDOKING = 34;
    CLEFARY = 35;
    CLEFABLE = 36;
    VULPIX = 37;
    NINETALES = 38;
    JIGGLYPUFF = 39;
    WIGGLYTUFF = 40;
    ZUBAT = 41;
    GOLBAT = 42;
    ODDISH = 43;
    GLOOM = 44;
    VILEPLUME = 45;
    PARAS = 46;
    PARASECT = 47;
    VENONAT = 48;
    VENOMOTH = 49;
    DIGLETT = 50;
    DUGTRIO = 51;
    MEOWTH = 52;
    PERSIAN = 53;
    PSYDUCK = 54;
    GOLDUCK = 55;
    MANKEY = 56;
    PRIMEAPE = 57;
    GROWLITHE = 58;
    ARCANINE = 59;
    POLIWAG = 60;
    POLIWHIRL = 61;
    POLIWRATH = 62;
    ABRA = 63;
    KADABRA = 64;
    ALAKHAZAM = 65;
    MACHOP = 66;
    MACHOKE = 67;
    MACHAMP = 68;
    BELLSPROUT = 69;
    WEEPINBELL = 70;
    VICTREEBELL = 71;
    TENTACOOL = 72;
    TENTACRUEL = 73;
    GEODUGE = 74;
    GRAVELER = 75;
    GOLEM = 76;
    PONYTA = 77;
    RAPIDASH = 78;
    SLOWPOKE = 79;
    SLOWBRO = 80;
    MAGNEMITE = 81;
    MAGNETON = 82;
    FARFETCHD = 83;
    DODUO = 84;
    DODRIO = 85;
    SEEL = 86;
    DEWGONG = 87;
    GRIMER = 88;
    MUK = 89;
    SHELLDER = 90;
    CLOYSTER = 91;
    GASTLY = 92;
    HAUNTER = 93;
    GENGAR = 94;
    ONIX = 95;
    DROWZEE = 96;
    HYPNO = 97;
    KRABBY = 98;
    KINGLER = 99;
    VOLTORB = 100;
    ELECTRODE = 101;
    EXEGGCUTE = 102;
    EXEGGUTOR = 103;
    CUBONE = 104;
    MAROWAK = 105;
    HITMONLEE = 106;
    HITMONCHAN = 107;
    LICKITUNG = 108;
    KOFFING = 109;
    WEEZING = 110;
    RHYHORN = 111;
    RHYDON = 112;
    CHANSEY = 113;
    TANGELA = 114;
    KANGASKHAN = 115;
    HORSEA = 116;
    SEADRA = 117;
    GOLDEEN = 118;
    SEAKING = 119;
    STARYU = 120;
    STARMIE = 121;
    MR_MIME = 122;
    SCYTHER = 123;
    JYNX = 124;
    ELECTABUZZ = 125;
    MAGMAR = 126;
    PINSIR = 127;
    TAUROS = 128;
    MAGIKARP = 129;
    GYARADOS = 130;
    LAPRAS = 131;
    DITTO = 132;
    EEVEE = 133;
    VAPOREON = 134;
    JOLTEON = 135;
    FLAREON = 136;
    PORYGON = 137;
    OMANYTE = 138;
    OMASTAR = 139;
    KABUTO = 140;
    KABUTOPS = 141;
    AERODACTYL = 142;
    SNORLAX = 143;
    ARTICUNO = 144;
    ZAPDOS = 145;
    MOLTRES = 146;
    DRATINI = 147;
    DRAGONAIR = 148;
    DRAGONITE = 149;
    MEWTWO = 150;
    MEW = 151;
}
// A "fort" is the internal name for a gym or pokestop point of interest
message PokemonFortProto {
    enum FortSponsor {
        UNSET_SPONSOR = 0; // was originally "UNSET" in the app itself
        MCDONALDS = 1;
        POKEMON_STORE = 2;
    }

    enum FortRenderingType {
        DEFAULT = 0;
        INTERNAL_TEST = 1;
    }


    string FortId = 1;
    int64 LastModifiedMs = 2;
    double Latitude = 3;
    double Longitude = 4;
    bool Enabled = 8;

    // Fields related to gyms only

    // Team that owns the gym
    Custom_TeamColor Team = 5;

    // Highest CP Pokemon at the gym
    Custom_PokemonName GuardPokemonId = 6;
    int32 GuardPokemonLevel = 7;

    // Prestigate / experience of the gym
    int64 GymPoints = 10;

    // Whether someone is battling at the gym currently
    bool IsInBattle = 11;

    // Fields related to pokestops only

    // If 1, this is a pokestop
    FortType FortType = 9;

    // Timestamp when the pokestop can be activated again to get items / xp
    int64 CooldownCompleteMs = 14;

    FortSponsor Sponsor = 15;
    FortRenderingType RenderingType = 16;

    // Might represent the type of item applied to the pokestop, right only lures can be applied
    bytes ActiveFortModifier = 12;

    message Custom_FortLureInfoProto {
        string FortId = 1;
        double NotSure2 = 2;
        Custom_PokemonName ActivePokemon = 3;
        int64 LureExpiryMs = 4;
    }
    Custom_FortLureInfoProto FortLureInfo = 13;
}
message WildPokemonProto {
    fixed64 EncounterId = 1;
    int64 LastModifiedMs = 2;
    double Latitude = 3;
    double Longitude = 4;

    // S2 geographic area of the spawn point (http://s2map.com/) (https://code.google.com/archive/p/s2-geometry-library/)
    string SpawnPointId = 5;

    PokemonProto Pokemon = 7;

    // The amount of time before the pokemon will be gone
    int32 TimeTillHiddenMs = 11;
}
message ClientSpawnPointProto {
    double Latitude = 2;
    double Longitude = 3;
}
message PokemonSummaryFortProto {
    string FortSummaryId = 1;
    int64 LastModifiedMs = 2;
    double Latitude = 3;
    double Longitude = 4;
}

message NearbyPokemonProto {
    Custom_PokemonName PokedexNumber = 1;
    float DistanceMeters = 2;
    fixed64 EncounterId = 3;
}
enum Custom_TeamColor {
    NEUTRAL = 0;
    BLUE = 1;
    RED = 2;
    YELLOW = 3;
}
enum FortType {
    GYM = 0;
    CHECKPOINT = 1; //Pokestop
}